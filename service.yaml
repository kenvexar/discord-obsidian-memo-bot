apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: discord-obsidian-memo-bot
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
spec:
  template:
    metadata:
      annotations:
        # Resource allocation optimized for Discord bot workload
        run.googleapis.com/memory: "1Gi"
        run.googleapis.com/cpu: "1"
        
        # Concurrency and scaling settings
        run.googleapis.com/execution-environment: gen2
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/maxScale: "10"
        run.googleapis.com/cpu-throttling: "false"
        
        # Timeout optimized for long-running bot operations
        run.googleapis.com/timeout: "300s"
    spec:
      containerConcurrency: 5
      timeoutSeconds: 300
      containers:
      - image: gcr.io/PROJECT_ID/discord-obsidian-memo-bot:latest
        ports:
        - name: http1
          containerPort: 8080
          protocol: TCP
        
        env:
        # Core application settings
        - name: ENVIRONMENT
          value: "production"
        - name: PORT
          value: "8080"
        - name: MOCK_MODE
          value: "false"
        
        # Discord configuration
        - name: DISCORD_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: discord-bot-token
              key: token
        - name: DISCORD_GUILD_ID
          valueFrom:
            secretKeyRef:
              name: discord-config
              key: guild_id
        
        # AI and processing configuration
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-api-key
              key: key
        - name: SPEECH_API_KEY
          valueFrom:
            secretKeyRef:
              name: speech-api-key
              key: key
              
        # Storage and paths
        - name: OBSIDIAN_VAULT_PATH
          value: "/app/vault"
        - name: LOG_LEVEL
          value: "INFO"
        
        # Health check configuration
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Resource limits and requests
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        
        # Volume mounts for persistent data
        volumeMounts:
        - name: vault-data
          mountPath: /app/vault
        - name: logs
          mountPath: /app/logs
      
      volumes:
      - name: vault-data
        emptyDir: {}
      - name: logs
        emptyDir: {}